// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AuditType {
  IN
  OUT
}

enum AuditStatus {
  SUCCESS
  FAIL
}

enum CollectMethod {
  OCR
  CHAT
}

enum DocumentSide {
  FRONT
  BACK
}

enum DocumentType {
  DRIVER_LICENSE
  CAR_REGISTRATION
}

model Flow {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  steps     Step[]
}

model Step {
  id                     Int            @id @default(autoincrement())
  createdAt              DateTime       @default(now())
  updatedAt              DateTime       @updatedAt
  level                  Int
  message                String
  expectedResponse       String
  expectedResponseLength Int
  flowId                 Int
  flow                   Flow           @relation(fields: [flowId], references: [id])
  conversation           Conversation[]
}

model Conversation {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  whaPhoneNumber String
  message        String
  stepId         Int
  step           Step     @relation(fields: [stepId], references: [id])
}

model Audit {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  type      AuditType
  initiator String
  data      String
  response  String
  status    AuditStatus
}

model DocumentFile {
  id             Int          @id @default(autoincrement())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  dataImageUrl   String
  documentSide   DocumentSide
  documentType   DocumentType
  whaPhoneNumber String
}

model DriverPersonnalInfo {
  id                Int                @id @default(autoincrement())
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  lastName          String
  firstName         String
  phoneNumber       String             @unique
  whaPhoneNumber    String             @unique
  address           String
  collectMethod     CollectMethod
  yangoProfileId    String             @unique
  driverLicenseInfo DriverLicenseInfo?
}

model DriverLicenseInfo {
  id                  Int                 @id @default(autoincrement())
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  number              String              @unique
  country             String
  expiryDate          DateTime
  deliveryDate        DateTime
  idDriverPersInfo    Int                 @unique
  driverPersonnalInfo DriverPersonnalInfo @relation(fields: [idDriverPersInfo], references: [id])
}

model CarInfo {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  brand       String
  color       String
  year        String
  plateNumber String   @unique
  status      String
  code        String
  yangoCarId  String   @unique
}

model DriverCar {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  idDriver  Int      @unique
  idCar     Int      @unique
}
